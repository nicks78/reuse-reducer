{"ast":null,"code":"import _classCallCheck from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nic/Sites/reuse-reducer/src/pages/comments/index.js\";\nimport React, { Component } from 'react';\nimport { getItemList } from '../../redux/actions/';\nimport { connect } from 'react-redux';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      reducer: 'COMMENTS'\n    };\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.receivedAt === null) {\n        this.props.getItemList(this.state.reducer);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isFetching = _this$props.isFetching,\n          listcomments = _this$props.listcomments;\n\n      if (isFetching) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Loading data...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"COMMENTS\"), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, listcomments.map(function (comment, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, comment.name);\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFetching: state.library.comments.isFetching,\n    listcomments: state.library.comments.list,\n    receivedAt: state.library.comments.receivedAt\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getItemList: getItemList\n})(Comments);","map":{"version":3,"sources":["/Users/nic/Sites/reuse-reducer/src/pages/comments/index.js"],"names":["React","Component","getItemList","connect","Comments","state","reducer","props","receivedAt","isFetching","listcomments","map","comment","index","name","mapStateToProps","library","comments","list"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAGFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;;;;;;wCAIW;AACf,UAAG,KAAKC,KAAL,CAAWC,UAAX,KAA0B,IAA7B,EAAmC;AAC/B,aAAKD,KAAL,CAAWL,WAAX,CAAuB,KAAKG,KAAL,CAAWC,OAAlC;AACH;AACJ;;;6BAEM;AAAA,wBAE4B,KAAKC,KAFjC;AAAA,UAEAE,UAFA,eAEAA,UAFA;AAAA,UAEYC,YAFZ,eAEYA,YAFZ;;AAIP,UAAGD,UAAH,EAAc;AACV,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIC,YAAY,CAACC,GAAb,CAAiB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAEjC,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,SAAS,EAAC,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6CD,OAAO,CAACE,IAArD,CAAP;AAGH,OALD,CAFJ,CAFA,CADJ;AAeD;;;;EApCoBb,S;;AAwCvB,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACV,KAAD,EAAW;AAEjC,SAAO;AACHI,IAAAA,UAAU,EAAEJ,KAAK,CAACW,OAAN,CAAcC,QAAd,CAAuBR,UADhC;AAEHC,IAAAA,YAAY,EAAEL,KAAK,CAACW,OAAN,CAAcC,QAAd,CAAuBC,IAFlC;AAGHV,IAAAA,UAAU,EAAEH,KAAK,CAACW,OAAN,CAAcC,QAAd,CAAuBT;AAHhC,GAAP;AAKD,CAPD;;AAUA,eAAeL,OAAO,CAACY,eAAD,EAAkB;AAAEb,EAAAA,WAAW,EAAXA;AAAF,CAAlB,CAAP,CAA0CE,QAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {getItemList} from '../../redux/actions/'\nimport {connect} from 'react-redux'\n\nclass Comments extends Component {\n\n\n    state = {\n        reducer: 'COMMENTS',\n    }\n\n    componentDidMount(){\n        if(this.props.receivedAt === null ){\n            this.props.getItemList(this.state.reducer)\n        }\n    }\n\n  render() {\n\n    const {isFetching, listcomments} = this.props\n\n    if(isFetching){\n        return <p>Loading data...</p>\n    }\n\n    return (\n        <div className=\"Comments\">\n        <h1 className=\"\">COMMENTS</h1>\n        <ul className=\"list-group\">\n        {\n            listcomments.map((comment, index) => {\n\n                return <li key={index} className=\"list-group-item\">{comment.name}</li>\n                   \n\n            })\n        }\n        </ul>\n    </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n\n  return {\n      isFetching: state.library.comments.isFetching,\n      listcomments: state.library.comments.list,\n      receivedAt: state.library.comments.receivedAt,\n  }\n}\n\n\nexport default connect(mapStateToProps, { getItemList })(Comments);\n\n"]},"metadata":{},"sourceType":"module"}