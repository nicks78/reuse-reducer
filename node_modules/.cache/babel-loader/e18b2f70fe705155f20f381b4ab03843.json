{"ast":null,"code":"import _toConsumableArray from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n// manager/src/redux/baseReducer.js\nimport { updateArrayOfObject } from '../utils/help_function';\n\nvar BaseState = function BaseState() {\n  _classCallCheck(this, BaseState);\n\n  this.tmp_state = {};\n  this.item = null;\n  this.isUpdating = false;\n  this.receivedAt = null;\n  this.progress = 0;\n  this.isCreating = false;\n  this.isFetching = false;\n  this.isError = false;\n  this.list = [];\n};\n\nvar baseReducer = function baseReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BaseState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"REQUEST\":\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching,\n        isError: action.isError\n      });\n\n    case \"REQUEST_CREATE\":\n      return _objectSpread({}, state, {\n        isCreating: action.isCreating,\n        isError: action.isError\n      });\n\n    case \"REQUEST_UPDATE\":\n      return _objectSpread({}, state, {\n        isUpdating: action.isUpdating,\n        isError: action.isError\n      });\n\n    case \"FAILED\":\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching,\n        receivedAt: action.receivedAt,\n        isError: action.isError\n      });\n\n    case \"RECEIVE\":\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching,\n        list: action.payload,\n        receivedAt: action.receivedAt\n      });\n\n    case \"GET\":\n      return _objectSpread({}, state, {\n        item: action.item,\n        isFetching: action.isFetching\n      });\n\n    case \"STATE\":\n      return _objectSpread({}, state, {\n        tmp_state: _objectSpread({}, state.tmp_state, _defineProperty({}, action.payload.fieldName, action.payload.value))\n      });\n\n    case \"CREATE\":\n      return _objectSpread({}, state, {\n        isCreating: action.isCreating,\n        progress: action.value,\n        tmp_state: {},\n        list: _toConsumableArray(state.list).concat([action.item])\n      });\n\n    case \"UPDATE\":\n      return _objectSpread({}, state, {\n        progress: action.value,\n        isUpdating: action.isUpdating,\n        tmp_state: {},\n        item: action.item,\n        list: updateArrayOfObject(state.list, action.item)\n      });\n\n    case \"PROGRESS\":\n      return _objectSpread({}, state, {\n        progress: action.value\n      });\n\n    case \"RESET\":\n      return new BaseState();\n\n    case \"RESET_STATE\":\n      return _objectSpread({}, state, {\n        tmp_state: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default baseReducer;","map":{"version":3,"sources":["/Users/nic/Sites/reuse-reducer/src/redux/baseReducer.js"],"names":["updateArrayOfObject","BaseState","tmp_state","item","isUpdating","receivedAt","progress","isCreating","isFetching","isError","list","baseReducer","state","action","type","payload","fieldName","value"],"mappings":";;;;AAAA;AACA,SAAQA,mBAAR,QAAkC,wBAAlC;;IAGMC,S;;;OACFC,S,GAAY,E;OACZC,I,GAAO,I;OACPC,U,GAAa,K;OACbC,U,GAAa,I;OACbC,Q,GAAW,C;OACXC,U,GAAa,K;OACbC,U,GAAa,K;OACbC,O,GAAU,K;OACVC,I,GAAO,E;;;AAKX,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAqC;AAAA,MAApCC,KAAoC,uEAA5B,IAAIX,SAAJ,EAA4B;AAAA,MAAXY,MAAW;;AAGrD,UAAQA,MAAM,CAACC,IAAf;AACI;AACI,+BACOF,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIC,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAHpB;;AAKJ;AACI,+BACOG,KADP;AAEIL,QAAAA,UAAU,EAAEM,MAAM,CAACN,UAFvB;AAGIE,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAHpB;;AAKJ;AACI,+BACOG,KADP;AAEIR,QAAAA,UAAU,EAAES,MAAM,CAACT,UAFvB;AAGIK,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAHpB;;AAKJ;AACI,+BACOG,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIH,QAAAA,UAAU,EAAEQ,MAAM,CAACR,UAHvB;AAIII,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAJpB;;AAOJ;AACI,+BACOG,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIE,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAHjB;AAIIV,QAAAA,UAAU,EAAEQ,MAAM,CAACR;AAJvB;;AAOJ;AACI,+BACOO,KADP;AAEIT,QAAAA,IAAI,EAAEU,MAAM,CAACV,IAFjB;AAGIK,QAAAA,UAAU,EAAEK,MAAM,CAACL;AAHvB;;AAMJ;AACI,+BACOI,KADP;AAEIV,QAAAA,SAAS,oBAAOU,KAAK,CAACV,SAAb,sBAA0BW,MAAM,CAACE,OAAP,CAAeC,SAAzC,EAAuDH,MAAM,CAACE,OAAP,CAAeE,KAAtE;AAFb;;AAKJ;AACI,+BACOL,KADP;AAEIL,QAAAA,UAAU,EAAEM,MAAM,CAACN,UAFvB;AAGID,QAAAA,QAAQ,EAAEO,MAAM,CAACI,KAHrB;AAIIf,QAAAA,SAAS,EAAE,EAJf;AAKIQ,QAAAA,IAAI,qBAAOE,KAAK,CAACF,IAAb,UAAmBG,MAAM,CAACV,IAA1B;AALR;;AAOJ;AACI,+BACOS,KADP;AAEIN,QAAAA,QAAQ,EAAEO,MAAM,CAACI,KAFrB;AAGIb,QAAAA,UAAU,EAAES,MAAM,CAACT,UAHvB;AAIIF,QAAAA,SAAS,EAAE,EAJf;AAKIC,QAAAA,IAAI,EAAEU,MAAM,CAACV,IALjB;AAMIO,QAAAA,IAAI,EAAEV,mBAAmB,CAACY,KAAK,CAACF,IAAP,EAAaG,MAAM,CAACV,IAApB;AAN7B;;AASJ;AACI,+BACOS,KADP;AAEIN,QAAAA,QAAQ,EAAEO,MAAM,CAACI;AAFrB;;AAKJ;AACI,aAAO,IAAIhB,SAAJ,EAAP;;AAEJ;AACI,+BACOW,KADP;AAEIV,QAAAA,SAAS,EAAEW,MAAM,CAACE;AAFtB;;AAKJ;AACI,aAAOH,KAAP;AAlFR;AAoFH,CAvFD;;AA2FA,eAAeD,WAAf","sourcesContent":["// manager/src/redux/baseReducer.js\nimport {updateArrayOfObject} from '../utils/help_function'\n\n\nclass BaseState {\n    tmp_state = {};\n    item = null;\n    isUpdating = false;\n    receivedAt = null;\n    progress = 0;\n    isCreating = false;\n    isFetching = false;\n    isError = false;\n    list = []\n}\n\n\n\nconst baseReducer = (state = new BaseState(), action) => {\n    \n\n    switch (action.type) {\n        case `REQUEST`:\n            return  { \n                ...state,\n                isFetching: action.isFetching,\n                isError: action.isError\n            }\n        case `REQUEST_CREATE`:\n            return  { \n                ...state,\n                isCreating: action.isCreating,\n                isError: action.isError\n            }\n        case `REQUEST_UPDATE`:\n            return  { \n                ...state,\n                isUpdating: action.isUpdating,\n                isError: action.isError\n            }\n        case `FAILED`: \n            return {\n                ...state,\n                isFetching: action.isFetching,\n                receivedAt: action.receivedAt, \n                isError: action.isError,\n            }\n\n        case `RECEIVE`:\n            return  { \n                ...state,\n                isFetching: action.isFetching,\n                list: action.payload,\n                receivedAt: action.receivedAt\n            }\n\n        case `GET`: \n            return {\n                ...state,\n                item: action.item,\n                isFetching: action.isFetching,\n            }\n\n        case `STATE`: \n            return {\n                ...state,\n                tmp_state: { ...state.tmp_state, [ action.payload.fieldName ] : action.payload.value }\n            }\n            \n        case `CREATE`:\n            return {\n                ...state,\n                isCreating: action.isCreating,\n                progress: action.value,\n                tmp_state: {},\n                list: [ ...state.list, action.item ]\n            }\n        case `UPDATE`:\n            return {\n                ...state,\n                progress: action.value,\n                isUpdating: action.isUpdating,\n                tmp_state: {},\n                item: action.item,\n                list: updateArrayOfObject(state.list, action.item)\n            }\n            \n        case `PROGRESS`:\n            return {\n                ...state,\n                progress: action.value,\n            }\n\n        case `RESET`: \n            return new BaseState()\n\n        case `RESET_STATE`: \n            return {\n                ...state,\n                tmp_state: action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport default baseReducer;"]},"metadata":{},"sourceType":"module"}