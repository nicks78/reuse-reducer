{"ast":null,"code":"import _objectSpread from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n// manager/src/redux/baseReducer.js\nvar BaseState = function BaseState() {\n  _classCallCheck(this, BaseState);\n\n  this.tmp_state = {};\n  this.item = null;\n  this.isUpdating = false;\n  this.receivedAt = null;\n  this.progress = 0;\n  this.isCreating = false;\n  this.isFetching = false;\n  this.isError = false;\n  this.list = [];\n};\n\nvar baseReducer = function baseReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new BaseState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"REQUEST\":\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching,\n        isError: action.isError\n      });\n\n    case \"FAILED\":\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching,\n        receivedAt: action.receivedAt,\n        isError: action.isError\n      });\n\n    case \"RECEIVE\":\n      return _objectSpread({}, state, {\n        isFetching: action.isFetching,\n        list: action.payload,\n        receivedAt: action.receivedAt\n      });\n\n    case \"GET\":\n      return _objectSpread({}, state, {\n        item: action.item,\n        isFetching: action.isFetching\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default baseReducer;","map":{"version":3,"sources":["/Users/nic/Sites/reuse-reducer/src/redux/reducers/baseReducer.js"],"names":["BaseState","tmp_state","item","isUpdating","receivedAt","progress","isCreating","isFetching","isError","list","baseReducer","state","action","type","payload"],"mappings":";;;AAAA;IAGMA,S;;;OACFC,S,GAAY,E;OACZC,I,GAAO,I;OACPC,U,GAAa,K;OACbC,U,GAAa,I;OACbC,Q,GAAW,C;OACXC,U,GAAa,K;OACbC,U,GAAa,K;OACbC,O,GAAU,K;OACVC,I,GAAO,E;;;AAKX,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAqC;AAAA,MAApCC,KAAoC,uEAA5B,IAAIX,SAAJ,EAA4B;AAAA,MAAXY,MAAW;;AAGrD,UAAQA,MAAM,CAACC,IAAf;AACI;AACI,+BACOF,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIC,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAHpB;;AAKJ;AACI,+BACOG,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIH,QAAAA,UAAU,EAAEQ,MAAM,CAACR,UAHvB;AAIII,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAJpB;;AAOJ;AACI,+BACOG,KADP;AAEIJ,QAAAA,UAAU,EAAEK,MAAM,CAACL,UAFvB;AAGIE,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAHjB;AAIIV,QAAAA,UAAU,EAAEQ,MAAM,CAACR;AAJvB;;AAOJ;AACI,+BACOO,KADP;AAEIT,QAAAA,IAAI,EAAEU,MAAM,CAACV,IAFjB;AAGIK,QAAAA,UAAU,EAAEK,MAAM,CAACL;AAHvB;;AAMJ;AACI,aAAOI,KAAP;AA/BR;AAiCH,CApCD;;AAwCA,eAAeD,WAAf","sourcesContent":["// manager/src/redux/baseReducer.js\n\n\nclass BaseState {\n    tmp_state = {};\n    item = null;\n    isUpdating = false;\n    receivedAt = null;\n    progress = 0;\n    isCreating = false;\n    isFetching = false;\n    isError = false;\n    list = []\n}\n\n\n\nconst baseReducer = (state = new BaseState(), action) => {\n    \n\n    switch (action.type) {\n        case `REQUEST`:\n            return  { \n                ...state,\n                isFetching: action.isFetching,\n                isError: action.isError\n            }\n        case `FAILED`: \n            return {\n                ...state,\n                isFetching: action.isFetching,\n                receivedAt: action.receivedAt, \n                isError: action.isError,\n            }\n\n        case `RECEIVE`:\n            return  { \n                ...state,\n                isFetching: action.isFetching,\n                list: action.payload,\n                receivedAt: action.receivedAt\n            }\n\n        case `GET`: \n            return {\n                ...state,\n                item: action.item,\n                isFetching: action.isFetching,\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport default baseReducer;"]},"metadata":{},"sourceType":"module"}