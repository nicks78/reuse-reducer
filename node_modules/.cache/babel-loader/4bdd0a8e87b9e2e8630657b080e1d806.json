{"ast":null,"code":"import _objectSpread from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/nic/Sites/reuse-reducer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n//manager/src/redux/HOC/libraryReducer.js\nimport baseReducer from '../baseReducer';\n\nvar BaseState = function BaseState() {\n  _classCallCheck(this, BaseState);\n\n  this.tmp_state = {};\n  this.item = null;\n  this.progress = 0;\n  this.isUpdating = false;\n  this.receivedAt = null;\n  this.isCreating = false;\n  this.isFetching = false;\n  this.isError = false;\n  this.list = [];\n};\n\nvar InitialState = function InitialState() {\n  _classCallCheck(this, InitialState);\n\n  this.posts = new BaseState();\n  this.comments = new BaseState();\n  this.albums = new BaseState();\n};\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new InitialState();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.subtype) {\n    case 'POSTS':\n      return _objectSpread({}, state, {\n        posts: baseReducer(state.posts, action)\n      });\n\n    case 'COMMENTS':\n      return _objectSpread({}, state, {\n        comments: baseReducer(state.comments, action)\n      });\n\n    case 'ALBUMS':\n      return _objectSpread({}, state, {\n        albums: baseReducer(state.albums, action)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/nic/Sites/reuse-reducer/src/redux/high-order-component/libraryReducer.js"],"names":["baseReducer","BaseState","tmp_state","item","progress","isUpdating","receivedAt","isCreating","isFetching","isError","list","InitialState","posts","comments","albums","state","action","subtype"],"mappings":";;AAAA;AAEA,OAAOA,WAAP,MAAwB,gBAAxB;;IAGMC,S;;;OACFC,S,GAAY,E;OACZC,I,GAAO,I;OACPC,Q,GAAW,C;OACXC,U,GAAa,K;OACbC,U,GAAa,I;OACbC,U,GAAa,K;OACbC,U,GAAa,K;OACbC,O,GAAU,K;OACVC,I,GAAO,E;;;IAILC,Y;;;OACFC,K,GAAQ,IAAIX,SAAJ,E;OACRY,Q,GAAW,IAAIZ,SAAJ,E;OACXa,M,GAAS,IAAIb,SAAJ,E;;;AAGb,gBAAe,YAAwC;AAAA,MAAvCc,KAAuC,uEAA/B,IAAIJ,YAAJ,EAA+B;AAAA,MAAXK,MAAW;;AAEnD,UAAQA,MAAM,CAACC,OAAf;AACE,SAAK,OAAL;AACE,+BACKF,KADL;AAEEH,QAAAA,KAAK,EAAEZ,WAAW,CAACe,KAAK,CAACH,KAAP,EAAcI,MAAd;AAFpB;;AAIF,SAAK,UAAL;AACE,+BACKD,KADL;AAEEF,QAAAA,QAAQ,EAAEb,WAAW,CAACe,KAAK,CAACF,QAAP,EAAiBG,MAAjB;AAFvB;;AAIF,SAAK,QAAL;AACE,+BACKD,KADL;AAEED,QAAAA,MAAM,EAAEd,WAAW,CAACe,KAAK,CAACD,MAAP,EAAeE,MAAf;AAFrB;;AAIF;AAAS,aAAOD,KAAP;AAhBX;AAkBH,CApBD","sourcesContent":["//manager/src/redux/HOC/libraryReducer.js\n\nimport baseReducer from '../baseReducer'\n\n\nclass BaseState {\n    tmp_state = { };\n    item = null;\n    progress = 0 ;\n    isUpdating = false;\n    receivedAt = null;\n    isCreating = false;\n    isFetching = false;\n    isError = false;\n    list = []\n}\n\n\nclass InitialState {\n    posts = new BaseState();\n    comments = new BaseState();\n    albums = new BaseState();\n}\n  \nexport default (state = new InitialState(), action) => {\n \n    switch (action.subtype) {\n      case 'POSTS':\n        return {\n          ...state,\n          posts: baseReducer(state.posts, action)\n        }\n      case 'COMMENTS': \n        return {\n          ...state,\n          comments: baseReducer(state.comments, action)\n        }\n      case 'ALBUMS': \n        return {\n          ...state,\n          albums: baseReducer(state.albums, action)\n        }\n      default: return state;\n    }\n}\n\n\n  "]},"metadata":{},"sourceType":"module"}